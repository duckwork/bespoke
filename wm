#! /usr/bin/env dash
# BESPOKE - a wm that's ~ just for me ~
# v. 1 + i by Case Duckworth <acduckworth@zoho.com>

############################################################
hi () # Set up variables, source stuff, make directories
{
  # export WMD="${1:-${XDG_CONFIG_HOME:-$HOME/.config}/wm}";
  export WMD="$HOME/projects/wm";
  export LIB="$WMD/lib";
  export BIN="$WMD/bin";
  export HKS="$WMD/hooks";
  export CFG="$WMD/config";
  export TMP="/tmp/wm"; # TODO allow somehow for multiple sessions?
  export PID="$TMP/pid";
  mkdir -p $WMD $BIN $LIB $HKS $CFG $TMP $PID;
  # Import libraries
  . $LIB/util.sh;
  . $LIB/wm.sh;
}

############################################################
wm ()  # Main entry for wm commands
{ # wm [-vql] [-e cmd] | <cmd> <args...>
  # Handle -options
  export WMVERBOSE=false WMQUIET='';
  while getopts vqlLe: o ; do
    case $o in
      v) # verbose
        export WMVERBOSE=true;
        set -o xtrace;
        ;;
      q) # quiet
        export WMQUIET=silent;
        ;;
      l) # list commands
        ls $BIN; exit $?;
        ;;
      L) # list everything with tree
        tree $WMD; exit $?;
        ;;
      e) # edit command
        wm_edit "$BIN/$OPTARG"; # TODO allow editing of anything
        exit $?;
        ;;
      \?) die $E_ARG "${0}: wm: Unknown option: \"$o\"" ;;
    esac
  done; shift $((OPTIND - 1));
  # Run command
  [ $# -ge 1 ] || die $E_ARG "${0}: wm: Not enough arguments";
  local cmd="$1"; shift;
  case "$cmd" in
    focus|raise|lower|map|hide|ignore|notice|raise|lower)
      # Built-in commands defined in $LIB/wm.sh
      wm_$cmd $@;
      ;;
    *) # Other scripts in $BIN
      cmd="$BIN/$cmd";
      if [ -x "$cmd" ]; then
        $cmd $@;
      elif [ -f "$cmd" ]; then # TODO think about commenting out
        chmod +x "$cmd";
        $cmd $@;
      else
        die $E_EXE "${0}: wm: \"$cmd\" is unavailable or unexecutable";
      fi
      ;;
  esac
}

############################################################
bespoke()
{ # Start a loop and hold the session open
  # ln -s $0 $PATH/bespoke
  export PATH="$WMD:$PATH" KEYPID=$PID/keys EVPID=$PID/events;
  wm init;
  sxhkd -c $WMD/keys && {
    printf '%s\n' $! > $KEYPID;
  } || {
    read pid < $KEYPID;
    kill -SIGUSR1 $pid;
  } &
  printf '%s\n' $(wm bait) > $EVPID &
  wait;
}

###################################################### BEGIN
hi;
case $0 in
  *bespoke) bespoke ;;
  *) $WMQUIET wm $@ ;;
esac
