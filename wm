#! /usr/bin/env dash
# WM 0.1
# by Case Duckworth

############################################################
hi()
{ # Set up directories, variables
  export WMD="$HOME/projects/wm"; # TODO on install change to
  # export WMD="${XDG_CONFIG_HOME:-$HOME/.config}/wm"
  export LIB="$WMD/lib";
  export BIN="$WMD/bin";
  export HOOKS="$WMD/hooks";
  export CONFIG="$WMD/config";
  mkdir -p $WMD $BIN $LIB $HOOKS $CONFIG;

  export TMP="/tmp/wm";
  mkdir -p $TMP;
}

############################################################
main() 
{
  [ $# -ge 1 ] || die $E_ARG "Not enough arguments";
  local cmd="$1"; shift;
  case "$cmd" in
    focus|raise|lower|map|hide|ignore|notice|raise|lower) 
      # built-in commands
      $cmd $@; # TODO use logx more
      ;;
    *) # other scripts
      cmd="$BIN/$cmd";
      if [ -x "$cmd" ]; then
        $cmd $@;
      elif [ -f "$cmd" ]; then # TODO take this out when finished
        chmod +x "$cmd"
        $cmd $@;
      else
        die $E_EXE "\"$cmd\" is unavailable";
      fi
      ;;
  esac
}

############################################################
bespoke()
{ # Start a loop and hold the session open
  # ln -s $0 $PATH/bespoke
  export PATH="$WMD:$PATH";
  wm stack nuke;
  sxhkd -c $WMD/keys || {
    read pid <$TMP/keyd.pid;
    kill -SIGUSR1 $pid;
  } &
  echo $! > $TMP/keyd.pid;
  wm bait &
  echo $! > $TMP/evd.pid;
  wait;
}

###################################################### BEGIN
hi;
. $LIB/util.sh;
. $LIB/wm.sh;
export WMVERBOSE=false; WMQUIET='';
while getopts vqle: opt; do
  case $opt in
    v) # verbose
      export WMVERBOSE=true;
      ;;
    q) # quiet
      WMQUIET=silent;
      ;;
    l) # list commands
      ls $BIN;
      exit $?;
      ;;
    e) # edit command
      edit "$BIN/$OPTARG";
      exit $?;
      ;;
    \?) die $E_ARG "Unknown option \"$opt\"" ;;
  esac
done; shift $((OPTIND - 1));

############################################################
case $0 in
  *bespoke) $WMQUIET bespoke ;;
  *) $WMQUIET main $@        ;;
esac
