#! /usr/bin/env dash
# WM 0.1
# by Case Duckworth

setup() { # setup variables, files, and directories
  # export WMD="${XDG_CONFIG_HOME:-$HOME/.config}/wm"
  export WMD="$HOME/projects/wm";
  export UTIL="$WMD/util.sh";
  export WMbin="$WMD/scripts";
  mkdir -p $WMD $WMscripts;

  export WMtmp="/tmp/wm";
  mkdir -p $WMtmp;

  . $UTIL;
}

# Local utilities
runf()
{ # runf <cmd> <args>
  f="$1"; shift;
  case "$1" in
    0x*) wid="$1" ;;
    *)
      cmd="$1"; shift;
      if [ -x "$WMbin/$cmd" ]; then
        wid="$($WMbin/$cmd $@)";
      else
        die $E_EXE "Unknown command: \"$cmd\"";
      fi
      ;;
  esac
  log $f $wid;
}

# Atomic actions
focus() 
{ # focus a window
  focus_wid() {
    if wattr "$1"; then
      wtf "$1";
      chwso -r "$1";
    fi
  }
  runf focus_wid "$@";
}

map()
{ # map a window
  map_wid() {
    if wattr "$1" && ! wattr m "$1"; then
      mapw -m "$1";
      focus "$1";
    fi
  }
  runf map_wid "$@";
}

hide()
{ # unmap a window
  hide_wid() {
    if wattr "$1" && wattr m "$1"; then
      mapw -u "$1";
      # TODO deal with focus
    fi
  }
  runf hide_wid "$@";
}

ignore()
{ # set a window's override_redirect property
  ignore_wid() {
    if wattr "$1" && ! wattr o "$1"; then
      ignw -s "$1";
      # TODO deal with focus
    fi
  }
  runf ignore_wid "$@";
}

notice()
{ # unset a window's override_redirect property
  notice_wid() {
    if wattr "$1" && wattr o "$1"; then
      ignw -r "$1";
      focus "$1";
    fi
  }
  runf notice_wid "$@";
}

raise()
{ # raise a window to the top of the stack
  raise_wid() {
    if wattr "$1"; then
      chwso -r "$1";
      focus "$1";
    fi
  }
  runf raise_wid "$@";
}

lower()
{ # lower a window to the bottom of the stack
  lower_wid() {
    if wattr "$1"; then
      chwso -l "$1";
      # TODO deal with focus
    fi
  }
  runf lower_wid "$@";
}

#####################################################################
main() 
{
  [ $# -ge 1 ] || die $E_ARG "Not enough arguments";
  cmd="$1"; shift;
  case "$cmd" in
    focus|map|hide|ignore|notice|raise|lower) # built-in commands
      for w ; do
        log $cmd $@;
      done
      ;;
    *) # other scripts
      cmd="$WMbin/$cmd";
      if [ -x "$cmd" ]; then
        log $cmd $@;
      elif [ -f "$cmd" ]; then # TODO take this out when finished
        chmod +x "$cmd"
        log $cmd $@;
      else
        die $E_EXE "\"$cmd\" is unavailable";
      fi
      ;;
  esac
}

setup;
export WMVERBOSE=false; WMQUIET='';
while getopts vqle: opt; do
  case $opt in
    v) # verbose
      export WMVERBOSE=true;
      ;;
    q) # quiet
      WMQUIET=silent;
      ;;
    l) # list commands
      log ls $WMbin;
      exit $SUCCESS;
      ;;
    e) # edit command
      file="$WMbin/$OPTARG";
      if [ -w "$file" ] || [ ! -f "$file" ]; then
        log $EDITOR $file;
      else
        die $E_FNF "\"$file\" is not writable"
      fi
      ;;
    \?) die $E_ARG "Unknown option \"$opt\"" ;;
  esac
done

$WMQUIET main $@
